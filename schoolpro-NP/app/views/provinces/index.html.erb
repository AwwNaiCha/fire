<!DOCTYPE html>
<html>
<head>
  <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDB06c3JC9Puup5N4gk3cK1j9sQ0kO615U&sensor=false"></script>

  <link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">
  <script src="http://code.jquery.com/jquery-1.10.2.js"></script>
  <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
  
  <style type="text/css">
    #mapDiv {
      width: 1400px;
      height: 800px;
    }

  </style>

  <script type="text/javascript">
  
  // time slider event listener
  var days = 0;
  
   $(function() {
      $( "#slider" ).slider({
         range:false,
         min: 0,
         max: 7,
		  values: [0],
         start: function( event, ui ) {
            $( "#startvalue" )
               .val( "$" + ui.values[ 0 ] + " - $" + ui.values[ 1 ] );
         },
         stop: function( event, ui ) {
            $( "#stopvalue" )
               .val( "$" + ui.values[ 0 ] + " - $" + ui.values[ 1 ] );
         },
         change: function( event, ui ) {
			
		    days =  ui.values[ 0 ];
		    console.log(days);
		   
	   		var d = new Date();
	 		d.setTime(d.getTime() + days * 86400000);
	 		var mapDate = d.getDate();
	 		var mapMonth = d.getMonth();
	 		var mapYear = d.getFullYear();
			
	   		console.log(d);
	   		console.log(d.getDate());
	         console.log(d.getMonth());
	   		console.log(d.getFullYear());
			 
            $( "#changevalue" )
               .val( "You have chosen day " + ui.values[ 0 ] + "              Date: " + mapMonth + "/" + mapDate + "/" + mapYear);
			   

		       map.data.setStyle(function(feature) {		  
	
		  
		   		  var level = 0;
		   		  var color = 'gray';
		   		  //console.log(feature.getProperty('name'));
		 		  for(var i = 0; i < firelevel.length; i++) {
		 			  if (firelevel[i].park_name.indexOf(feature.getProperty('name')) != -1 || feature.getProperty('name').indexOf(firelevel[i].park_name) != -1) {
		 				  var dataTime = new Date(firelevel[i].date);
		 				  var dataDate = dataTime.getDate();
		 				  var dataMonth = dataTime.getMonth();
		 				  var dataYear = dataTime.getFullYear();
				  
		 		    	  console.log(dataTime.getDate());
		 		          console.log(dataTime.getMonth());
		 		    	  console.log(dataTime.getFullYear());
				  
		 				  if (mapDate == dataDate && mapMonth == dataMonth && mapYear == dataYear) {
		 					  level = firelevel[i].level;
		 					  break;
		 				  }				  
		 			  }
		 		  }
		   		  if( level == "1") {
		   			  color = 'blue';
		   		  } else if (level == "2") {
		   			  color = 'red';
		   		  } else if (level == "3") {
		   	    	  color = 'yellow';
		   		  } else if (level == "4") {
		   			  color = 'green';
		   		  } else if (level == "5") {
		   			  color = 'black';
		   		  }
		  
		   		  return /** @type {google.maps.Data.StyleOptions} */({
		   		       fillColor: color,
		   		       strokeColor: color,
		   		       strokeWeight: 2
		   		  });
		 	  });
			  		   			   
			   
         },
         slide: function( event, ui ) {
            $( "#slidevalue" )
               .val( "$" + ui.values[ 0 ] + " - $" + ui.values[ 1 ] );
         }
     });
   });
  
 /////////////////////////////////////////////////////////////// 
  
  
    var map;
	var parklocs = '<%= @locations.to_json %>'
	var parklocs = JSON.parse(parklocs.replace(/&quot;/g,'"'));
	var firelevel = '<%= @firelevel.to_json %>'
	var firelevel = JSON.parse(firelevel.replace(/&quot;/g,'"'));
	
	//console.log(parklocs);
	//console.log(firelevel);
	
	
    function initMap() {
      google.maps.visualRefresh = true;

      var mapOptions = {
        zoom: 1,
        mapTypeControlOptions: {mapTypeIds:
            [google.maps.MapTypeId.ROADMAP]}
      };

      var mapElement = document.getElementById('mapDiv');
      map = new google.maps.Map(mapElement, mapOptions);
      map.setMapTypeId(google.maps.MapTypeId.ROADMAP);

      //Load GeoJSON
      //map.data.loadGeoJson("<%= provinces_path format: :json -%>");
      map.data.loadGeoJson("/parks.json");
	  
      map.setZoom(5);
      var gabon = new google.maps.LatLng(38.4230, -95.9717);
      map.setCenter(gabon);

      //Create an info box for displaying names
      var infoBox = document.createElement('div');
      infoBox.innerHTML = "<div id='info-box'></div>";
      map.controls[google.maps.ControlPosition.RIGHT_TOP].push(infoBox);

      map.data.addListener('mouseover', function(event) {
        map.data.revertStyle();
        $('#info-box').text(event.feature.getProperty('name'));
        map.data.overrideStyle(event.feature, { fillColor: 'red' });

      });

      map.data.addListener('mouseout', function(event){
        map.data.revertStyle();
      });
      
	  days = 0;
      map.data.setStyle(function(feature) {
		  
  		var d = new Date();
		d.setTime(d.getTime() + days * 86400000);
		var mapDate = d.getDate();
		var mapMonth = d.getMonth();
		var mapYear = d.getFullYear();
		
  		console.log(d);
  		console.log(d.getDate());
        console.log(d.getMonth());
  		console.log(d.getFullYear());
		  
  		  var level = 0;
  		  var color = 'gray';
  		  //console.log(feature.getProperty('name'));
		  for(var i = 0; i < firelevel.length; i++) {
			  if (firelevel[i].park_name.indexOf(feature.getProperty('name')) != -1 || feature.getProperty('name').indexOf(firelevel[i].park_name) != -1) {
				  var dataTime = new Date(firelevel[i].date);
				  var dataDate = dataTime.getDate();
				  var dataMonth = dataTime.getMonth();
				  var dataYear = dataTime.getFullYear();
				  
		    	  console.log(dataTime.getDate());
		          console.log(dataTime.getMonth());
		    	  console.log(dataTime.getFullYear());
				  
				  if (mapDate == dataDate && mapMonth == dataMonth && mapYear == dataYear) {
					  level = firelevel[i].level;
					  break;
				  }				  
			  }
		  }
		  
  		  if( level == "1") {
  			  color = 'blue';
  		  } else if (level == "2") {
  			  color = 'red';
  		  } else if (level == "3") {
  	    	  color = 'yellow';
  		  } else if (level == "4") {
  			  color = 'green';
  		  } else if (level == "5") {
  			  color = 'black';
  		  }
		  
  		  return /** @type {google.maps.Data.StyleOptions} */({
  		       fillColor: color,
  		       strokeColor: color,
  		       strokeWeight: 2
  		  });
	  });

	  

	  
	  
    }

    function zoomToUSA() {
        var istanbul = new google.maps.LatLng(38.4230, -95.9717);
		map.setZoom(5);
        map.setCenter(istanbul);
		
	  

    }

    function zoomToMarks() {
		
		for(i = 0; i < parklocs.length; i++) {
			var myLatLng = {lat: Number(parklocs[i].latitude), lng: Number(parklocs[i].longitude)};
			var marker = new google.maps.Marker({
	     	   position: myLatLng,
	      	   map: map,
	      	   title: parklocs[i].park_name + '\n' + 'Double click to details'
	   	 	});
			

			
		    google.maps.event.addListener(marker, 'click', (function(marker, i) {
				var contentString = '<h3>'+ parklocs[i].park_name + '</h3>' + '<h1> double click marker to see details </h1>';  
		         return function() {
		 			var infowindow = new google.maps.InfoWindow({
		 			    content: contentString
		 			  });			
					infowindow.open(map, marker);
	 	    		map.setZoom(10);
	 	    		map.setCenter(marker.getPosition());
		         }
		    })(marker, i));
			
		    google.maps.event.addListener(marker, "dblclick", (function(marker, i) {
		         return function() {
					 window.location.href="/visitornumbers/" + String(i + 1);
		         }
		    })(marker, i));
		};


    }

    function redirectToParkList() {
		window.location.href="/visitornumbers";
    }

    function refreshMap() {
		console.log("refresh");
		//window.location.reload();
		window.location.href="/provinces";
    }

    function setMinZoom() {
      map.setOptions({minZoom: 5});
    }

    function changeUI() {
      map.setOptions({disableDefaultUI: true});
    }

    function disableScroll() {
      map.setOptions({scrollwheel: false});
    }

    function startButtonEvents() {
      document.getElementById('btnZoomToUSA')
          .addEventListener('click', function(){
            zoomToUSA();
          });

      document.getElementById('btnZoomToMarks')
          .addEventListener('click', function() {
            zoomToMarks();
          });

      document.getElementById('btnredirecToParkList')
          .addEventListener('click', function(){
            redirectToParkList();
          });

      document.getElementById('btnrefreshMap')
          .addEventListener('click', function() {
            refreshMap();
          });
      document.getElementById('btnMinZoom')
          .addEventListener('click', function() {
            setMinZoom();
          });
      document.getElementById('btnChangeUI')
          .addEventListener('click', function() {
            changeUI();
          })
      document.getElementById('btnDisableScroll')
          .addEventListener('click', function() {
            disableScroll();
          });
    }

    google.maps.event.addDomListener(window, 'load', initMap);
    document.addEventListener('DOMContentLoaded', startButtonEvents);
	
  </script>
</head>
<body>
	
<h2>National Parks in USA</h2>

<div>
  <input id="btnrefreshMap" type="button" class="button" value="Refresh" />
  <input id="btnZoomToUSA" type="button" class="button" value="Zoom To USA" />
  <input id="btnZoomToMarks" type="button" class="button" value="Park Marks" />
  <input id="btnredirecToParkList" type="button" class="button" value="Park List" />
</div>


<table>
  <tr>
    <td><div id="mapDiv"/></td>
  </tr>

</table>
<div>
    <p>
	   <h1>Choose the Day for Fire Leve Prediction:</h1>
       <input type="text" id="changevalue" 
          style="border:0; color:#b9cd6d; font-weight:bold;">
    </p>
</div>
<div id="slider"></div>
      <!--p>
         <label for="startvalue">Start:</label>
         <input type="text" id="startvalue" 
            style="border:0; color:#b9cd6d; font-weight:bold;">
      </p>
      <p>
         <label for="stopvalue">Stop:</label>
         <input type="text" id="stopvalue" 
            style="border:0; color:#b9cd6d; font-weight:bold;">
      </p>
      <p>
         <label for="changevalue">Change:</label>
         <input type="text" id="changevalue" 
            style="border:0; color:#b9cd6d; font-weight:bold;">
      </p>
      <p>
         <label for="slidevalue">Slide:</label>
         <input type="text" id="slidevalue" 
            style="border:0; color:#b9cd6d; font-weight:bold;">
      </p -->
</body>
</html>